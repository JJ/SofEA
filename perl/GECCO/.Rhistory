changes.ip128.e96.r48 <- read.csv('changes-ip128-e96-r48.csv', sep=',');
changes.ip128.e96.r48 
plot(changes.ip128.e96.r48$rev1)
lines(changes.ip128.e96.r48$rev1)
quit()
changes.ip128.e96.r48 <- read.csv('changes-ip128-e96-r48-s500.csv', sep=',');
quit()
changes.ip128.e96.r48 <- read.csv('changes-ip128-e96-r48-s500.csv', sep=',');
lines(changes.ip128.e96.r48$rev1)
plot(changes.ip128.e96.r48$rev1)
plot(changes.ip128.e96.r48$rev1,type='l')
changes.ip128.e96.r24 <- read.csv('changes-ip128-e96-r24.csv', sep=',');
changes.ip128.e96.r24 <- read.csv('ip128-e96-r24.csv', sep=',');
lines(changes.ip128.e96.r24$rev1, color='red')
plot(changes.ip128.e96.r48$rev1,type='l')
lines(changes.ip128.e96.r24$rev1, col='red')
changes.ip128.e96.r12 <- read.csv('ip128-e96-r12-s1k.csv', sep=',');
plot(changes.ip128.e96.r12$rev1,type='l')
changes.ip128.e96.r48 <- read.csv('changes-ip128-e96-r48-s1k.csv', sep=',');
plot(changes.ip128.e96.r48$rev1,col='red')
plot(changes.ip128.e96.r12$rev1,type='l')
lines(changes.ip128.e96.r48$rev1,col='red')
changes.ip128.e96.r24 <- read.csv('changes-ip128-e96-r24-s1k.csv', sep=',');
lines(changes.ip128.e96.r24$rev1,col='blue')
changes.ip128.e96.r24 <- read.csv('changes-ip128-e96-r24-s1k.csv', sep=',');
lines(changes.ip128.e96.r24$rev1,col='black')
rev1.ip128.e96.r48 <- read.csv('../changes-testrev.csv', sep=',');
plot(rev1.ip128.e96.r48$rev1,type='l')
plot(rev1.ip128.e96.r48$total,type='l')
rev1.ip128.e96.r24 <- read.csv('rev1-ip128-e96-r24-s1k.csv', sep=',');
lines(rev1.ip128.e96.r24$total,col='red')
lines(rev1.ip128.e96.r24$total,col='red')
plot(rev1.ip128.e96.r48$total,type='l',ylim=c(0,800))
lines(rev1.ip128.e96.r24$total,col='red')
plot(rev1.ip128.e96.r24$total,col='red')
rev1.ip128.e96.r24 <- read.csv('rev1-ip128-e96-r24-s1k.csv', sep=',');
rev1.ip128.e96.r12 <- read.csv('rev1-ip128-e96-r12-s1k.csv', sep=',');
plot(rev1.ip128.e96.r48$total,type='l',ylim=c(0,800))
lines(rev1.ip128.e96.r24$total,col='red')
lines(rev1.ip128.e96.r12$total,col='blue')
rev1.ip128.e96.r48.s100 <- read.csv('../changes-test-rev.csv');
plot(rev1.ip128.e96.r48.s100$total,type='l',ylim=c(0,800))
rev1.ip128.e96.r24.s100 <- read.csv('rev1-ip128-e96-r24-s100.csv')
rev1.ip128.e96.r12.s100 <- read.csv('rev1-ip128-e96-r12-s100.csv')
lines(rev1.ip128.e96.r24.s100$total,col='red')
lines(rev1.ip128.e96.r12.s100$total,col='blue')
plot(rev1.ip128.e96.r48.s100$total,type='l',ylim=c(0,900))
lines(rev1.ip128.e96.r12.s100$total,col='blue')
plot(rev1.ip128.e96.r48.s100$total,type='l',ylim=c(0,100))
lines(rev1.ip128.e96.r12.s100$total,col='blue')
plot(rev1.ip128.e96.r48.s100$total,type='l',ylim=c(0,1000))
lines(rev1.ip128.e96.r12.s100$total,col='blue')
lines(rev1.ip128.e96.r24.s100$total,col='red')
quit()
time.e96.r48.old <- read.table('time-ip128-e96-r48.dat' )
time.e96.r48.new <- read.table('time-ip128-e96-r48-new.dat' )
summary(time.e96.r48.new)
summary(time.e96.r48.old)
quit()
ls()
rev1.ip128.e96.r48.s100.new <- read.csv("rev1-ip128-e96-r48-s100-new.csv")
plot(rev1.ip128.e96.r48.s100$total,type='l',ylim=c(0,1000))
lines(rev1.ip128.e96.r48.s100.new$total,col='red')
quit()
source('plot-evals.R')
source('plot-evals.R')
source('plot-evals.R')
source('plot-evals.R')
source('plot-evals.R')
source('plot-times.R')
quit()
source('plot-times.R')
source('plot-evals.R')
quit()
source('plot-eval-all.R')
source('plot-eval-all.R')
quit()
evaluated.ip128.e48.r48.eval1.repro1 <- read.table('evaluated-ip128-e48-r48-eval1-repro1.dat')
plot(evaluated.ip128.e48.r48.eval1.repro1)
plot(evaluated.ip128.e48.r48.eval1.repro1$V1)
plot(evaluated.ip128.e48.r48.eval1.repro1$V1,type='l')
quit()
evaluated.ip128.e48.r48.eval2.repro2 <- read.table('evaluated-ip128-e48-r48-eval2-repro2.dat')
plot(evaluated.ip128.e48.r48.eval1.repro1$V1,type='l')
lines(evaluated.ip128.e48.r48.eval2.repro1$V2,col='red')
lines(evaluated.ip128.e48.r48.eval2.repro2$V1,col='red')
quit()
evaluated.ip128.r64.e1r1 <- read.table('evaluated-greedy-ip128-r64-eval1-repro1.dat')
evaluated.ip128.r64.e2r2 <- read.table('evaluated-greedy-ip128-r64-eval2-repro2.dat')
plot(evaluated.ip128.r64.e1r1$V1,type='l')
lines(evaluated.ip128.r64.e2r2$V1,col='red')
plot(evaluated.ip128.r64.e2r2$V1,col='red')
plot(evaluated.ip128.r64.e2r2$V1,col='red',type='l')
lines(evaluated.ip128.r64.e1r1$V1,col='blue')
plot(evaluated.ip128.r64.e2r2$V1,col='red',type='l',ylim=c(0,220))
lines(evaluated.ip128.r64.e1r1$V1,col='blue')
quit()
evaluated.ip128.r32.e2r2 <- read.table('evaluated-greedy-ip128-r32-eval2-repro2.dat')
evaluated.ip128.r64.e1r1 <- read.table('evaluated-greedy-ip128-r64-eval2-repro1.dat')
plot(evaluated.ip128.r64.e2r2$V1,col='red',type='l',ylim=c(0,220))
lines(evaluated.ip128.r64.e1r1$V1,col='blue')
evaluated.ip128.r64.e2r1 <- read.table('evaluated-greedy-ip128-r64-eval2-repro1.dat')
evaluated.ip128.r64.e1r1 <- read.table('evaluated-greedy-ip128-r64-eval1-repro1.dat')
lines(evaluated.ip128.r64.e1r1$V1,col='black')
lines(evaluated.ip128.r32.e2r2$V1,col='green')
quit()
sleeping.ip128.r64.e2r1 <- read.table('sleeping-greedy-ip128-r64-eval2-repro1.dat')
sleeping.ip128.r64.e1r1 <- read.table('sleeping-greedy-ip128-r64-eval1-repro1.dat')
summary(sleeping.ip128.r64.e2r1)
summary(sleeping.ip128.r64.e1r1)
quit()
evals.ip128.r64.e1r1 <- read.table('evals-greedy-ip128-r64-eval1-repro1.dat')
evals.ip128.r64.e2r2 <- read.table('evals-greedy-ip128-r64-eval2-repro2.dat')
quit()
evals.ip128.r64.e2r2 <- read.table('evals-greedy-ip128-r64-eval2-repro2.dat')
plot(evals.ip128.r64.e2r2$V1,col='red',type='l')
summary(evals.ip128.r64.e2r2$V1)
summary(evals.ip128.r64.e1r1$V1)
quit()
quit()
time.ip128.er64 <- read.table('time-ip128-er64.dat')
evals.ip128.er64 <- read.table('evals-ip128-er64.dat')
evals.i256.p128.er64 <- read.table('evals-i256-p128-er64.dat')
evals.i256.p128.er64 <- read.table('evals-i256-p128-er64.dat')
quit()
evals.i256.p128.er64 <- read.table('evals-i256-p128-er64.dat')
time.i256.p128.er64 <- read.table('time-i256-p128-er64.dat')
quit()
time.i256.p128.er64 <- read.table('time-i256-p128-er64.dat')
initialpop.compare.time <- data.frame(InitialPop=c(rep('256', length(time.i256.p128.er64$V1), rep('128', length(time.ip128.er64$V1)), Time=c(time.i256.p128.er64$V1,time.ip128.er64$V1))
)
)
'
)
)
)
'
source('ipop-compare.R')
source('ipop-compare.R')
c(rep("256", length(time.i256.p128.er64$V1)
)
)
source('ipop-compare.R')
boxplot( initialpop.compare.time$Time ~ initialpop.compare.time$InitialPop)
source('ipop-compare.R')
boxplot( initialpop.compare.evals$Evals ~ initialpop.compare.evals$InitialPop)
wilcox.test( time.ip128.er64$V1, time.i256.p128.er64$V1 )
wilcox.test( time.ip128.er64$V1, time.i256.p128.er64$V1, paired='T' )
time.ip128.er64$V1
time.i256.p128.er64$V1
t.test( time.ip128.er64$V1, time.i256.p128.er64$V1, paired='T' )
t.test( time.ip128.er64, time.i256.p128.er64, paired=T )
t.test( time.ip128.er64$V1, time.i256.p128.er64$V1, paired=T )
t.test( evals.ip128.er64$V1, evals.i256.p128.er64$V1, paired=T )
boxplot( initialpop.compare.evals$Evals ~ initialpop.compare.evals$InitialPop)
boxplot( initialpop.compare.time$Time ~ initialpop.compare.time$InitialPop)
quit()
boxplot( initialpop.compare.time$Time ~ initialpop.compare.time$InitialPop, main='Running time', xlab='Initial population', xlab='Time (s)')
boxplot( initialpop.compare.time$Time ~ initialpop.compare.time$InitialPop, main='Running time', xlab='Initial population', ylab='Time (s)')
png('initial-pop-comparison.png', width=800, height=800)
boxplot( initialpop.compare.time$Time ~ initialpop.compare.time$InitialPop, main='Running time', xlab='Initial population', ylab='Time (s)')
dev.off()
quit()
source('evals-repro.R')
boxplot( time.ip128$Time ~ time.ip128$Configuration)
source('evals-repro.R')
boxplot( time.ip128$Time ~ time.ip128$Configuration)
boxplot( evals.ip128$Time ~ evals.ip128$Configuration)
boxplot( evals.ip128$Evals ~ evals.ip128$Configuration)
boxplot( evals.ip128$Evals ~ evals.ip128$Configuration,main='Number of evaluations', sub='Constant population',xlab='Configuration',ylab='Evaluations')
png('evals-comparison.png', width=800, height=800)
boxplot( evals.ip128$Evals ~ evals.ip128$Configuration,main='Number of evaluations', sub='Constant population',xlab='Configuration',ylab='Evaluations')
dev.off()
boxplot( time.ip128$Time ~ time.ip128$Configuration, main='Running time', sub='Constant population',xlab='Configuration',ylab='Time(s)')
png('time-comparison.png', width=800, height=800)
boxplot( time.ip128$Time ~ time.ip128$Configuration, main='Running time', sub='Constant population',xlab='Configuration',ylab='Time(s)')
dev.off()
quit()
